from typing import TypedDict, List
from src.agents.base.schema import ArtistState
from pydantic import BaseModel


class SketchDraft(BaseModel):
    """A single idea for a sketch, described in text."""
    design_description: str
    # The prompt that will be given to the drawing agent to create the SVG
    drawing_prompt: str


class SketchOutput(TypedDict):
    """The output of the drawing process for a single sketch."""
    idea: SketchDraft
    svg_elements: List[str]
    final_svg: str


class CanvasState(ArtistState):
    """The state for the sketch generation graph."""
    # This will hold the imaginative sketch ideas generated by the first node
    sketch_ideas: List[SketchDraft] = []
    # This will hold the final drawn sketches (SVG)
    sketches: List[SketchOutput] = []
    
